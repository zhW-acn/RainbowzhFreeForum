<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.9//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.acn.dao.PostMapper">

    <resultMap id="postMap" type="com.acn.bean.view.Post">
        <result property="userAvatar" column="avatar"/>
        <result property="username" column="name"/>
        <result property="title" column="title"/>
        <result property="text" column="text"/>
        <result property="createtime" column="createTime"/>
        <result property="userId" column="userid"/>
        <result property="postId" column="postid"/>
        <result property="replyCount" column="replyCount"/>
    </resultMap>


    <select id="selectAllPosts" resultMap="postMap">
        SELECT user.id AS userid, post.id AS postid, user.avatar, user.`name`, post.title, post.text, post.createTime,
               COUNT(`comment`.id) AS replyCount
        FROM post
                 LEFT JOIN user ON post.userId = user.id
                 LEFT JOIN `comment` ON post.id = `comment`.postId
        where user.id =  #{userId}
        GROUP BY user.id, post.id, user.avatar, user.`name`, post.title, post.text, post.createTime

    </select>

    <select id="postsCount" resultType="int">
        select count(*)
        from post
    </select>

    <select id="postsCountByUser" parameterType="int" resultType="java.lang.Integer">
        select count(*)
        from post
        where post.userId = #{userId}
          and flag != 0
    </select>

    <select id="selectPostById" resultMap="postMap">
        select user.id as userid, post.id as postid, user.avatar, user.`name`, post.title, post.text, post.createTime
        from post
                 LEFT JOIN user on post.userId = user.id
        where post.id = #{id}
          and flag != 0
    </select>

    <select id="selectPostByPaging" resultMap="postMap">
        SELECT user.id             AS userid,
               post.id             AS postid,
               user.avatar,
               user.`name`,
               post.title,
               post.text,
               post.createTime,
               COUNT(`comment`.id) AS replyCount
        FROM post
                 LEFT JOIN user ON post.userId = user.id
                 LEFT JOIN `comment` ON post.id = `comment`.postId
        where post.flag != 0
        GROUP BY user.id, post.id, user.avatar, user.`name`, post.title, post.text, post.createTime
        limit #{page}, #{pageSize}
    </select>

    <delete id="ADMIN_deletePostById">
        delete
        from post
        where id = #{postId};
    </delete>

    <update id="changeFlag">
        update post
        set flag = 0
        where id = #{postId};
    </update>
</mapper>