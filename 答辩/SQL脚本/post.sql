/*
 Navicat Premium Data Transfer

 Source Server         : 本地
 Source Server Type    : MySQL
 Source Server Version : 80032 (8.0.32)
 Source Host           : localhost:3306
 Source Schema         : rainbowzh

 Target Server Type    : MySQL
 Target Server Version : 80032 (8.0.32)
 File Encoding         : 65001

 Date: 05/01/2024 21:16:54
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for post
-- ----------------------------
DROP TABLE IF EXISTS `post`;
CREATE TABLE `post`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `title` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL,
  `text` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `userId` int NULL DEFAULT NULL,
  `createTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `flag` int NULL DEFAULT 1,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `userId`(`userId` ASC) USING BTREE,
  CONSTRAINT `post_ibfk_1` FOREIGN KEY (`userId`) REFERENCES `user` (`id`) ON DELETE SET NULL ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 26 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of post
-- ----------------------------
INSERT INTO `post` VALUES (1, '你所热爱的', '你所热爱的，就是你的生活！', 2, '2023-11-28 14:58:35', 1);
INSERT INTO `post` VALUES (2, '这是标题捏', '看到这条帖子的人手机自动下载元神', 17, '2023-11-29 22:27:52', 1);
INSERT INTO `post` VALUES (3, '炉石传说真尼玛好玩', '炉石传说真尼玛好玩', 18, '2023-11-30 21:03:38', 1);
INSERT INTO `post` VALUES (4, 'test2', 'test2', 19, '2023-11-30 21:04:00', 1);
INSERT INTO `post` VALUES (5, '你的脸怎么红了', '精神焕发！', 20, '2023-12-01 01:00:43', 1);
INSERT INTO `post` VALUES (7, '测试测试测试测', '测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试', 19, '2023-12-01 13:44:56', 0);
INSERT INTO `post` VALUES (8, '肯德基疯狂星期四', '肯德基疯狂星期四肯德基疯狂星期四肯德基疯狂星期四肯德基疯狂星期四肯德基疯狂星期四肯德基疯狂星期四', 19, '2023-12-18 19:30:09', 1);
INSERT INTO `post` VALUES (9, '肯德基', '疯狂星期四。我好想吃啊', 0, '2023-12-18 19:49:00', 1);
INSERT INTO `post` VALUES (10, '美国核反应堆实验室遭到黑客攻击，被要求制造“猫娘”', '美国核能实验室爱达荷国家实验室（INL）遭到自称为 “gay furry hackers” 的 SiegedSec 组织攻击，他们声称入侵了INL计算机系统，窃取了数千名员工的记录，包括社保号码、地址和银行账户数据。\n\n实验室已确认遭受网络攻击，采取紧急措施保护员工数据，并报警调查。黑客组织表示，如果实验室研究创造现实中的“猫娘”，他们将停止泄露信息。\n\nINL是核能研究的重要中心，拥有世界上密度最高的核反应堆集中区域。实验室致力于核能和替代能源研究，包括电动汽车电池和小型模块反应堆设计。', 0, '2023-12-19 14:58:19', -1);
INSERT INTO `post` VALUES (11, '美国卡内基梅隆大学开设《原神》研究课程：考试要在 2 分钟内击败 BOSS', '美国卡内基梅隆大学近日开设了《原神》相关课程，名为“《原神》—— 理论研究 101”。\n\n不少学生对学校的这一举措表示赞同，认为鼓励学生的兴趣有助于提高学习的积极性。这门课每周进行一次，学生修完之后可从中获得 3 个学分。\n\n据一位选修这门课的学生介绍，在该科目期中考试中，学生需要在 2 分钟内用自选英雄来击败 BOSS；在期末考试中，同样是 2 分钟击败 BOSS，但英雄无法由学生自选，而是随机选择。', 0, '2023-12-19 15:01:49', -1);
INSERT INTO `post` VALUES (12, 'NASA 首个深空激光传输视频是猫猫追激光', 'NASA 首个深空激光传输视频是猫猫追激光NASA 的深空光通信实验于12月11日从创纪录的 3100 万公里 (地月距离的80倍) 传输了超高清流媒体视频。这一里程碑标志着人类可以从深空传输非常高带宽的视频和其他数据，从而实现未来人类在地球轨道之外的任务。该15 秒的测试视频通过飞行激光收发器传输，到达地球需要 101 秒，以系统最大比特率 267 Mbps 发送。该仪器能够发送和接收近红外信号，将编码的近红外激光发射到加州理工学院帕洛玛天文台的海尔望远镜下载。视频中正在追激光的橘猫 Taters 是喷气推进实验室员工的宠物。视频中叠加了图形信息，展示 Taters 的心率、颜色和品种；还有航天器的轨道、望远镜的圆顶以及激光器的技术信息。', 0, '2023-12-19 20:10:54', -1);
INSERT INTO `post` VALUES (23, 'csdkjahskd', 'ssssss', 2, '2024-01-05 16:45:06', 1);
INSERT INTO `post` VALUES (24, '测试测试测试测试测试', '测试内容', 24, '2024-01-05 20:36:15', 1);
INSERT INTO `post` VALUES (25, 'ceshi', 'ceshi', 0, '2024-01-05 21:04:10', -1);

SET FOREIGN_KEY_CHECKS = 1;
